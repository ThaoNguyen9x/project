import { Modal } from "antd";
import { Link } from "react-router-dom";

const ModalNotification = (props) => {
  const { openNotification, setOpenNotification, notificationDetails } = props;

  const message = notificationDetails?.message
    ? JSON.parse(notificationDetails.message)
    : null;

  const formattedAmount = message?.paymentAmount
    ? message.paymentAmount.toLocaleString("en-US", {
        style: "currency",
        currency: "USD",
      })
    : "N/A";

  const notificationTypes = {
    Contact: (
      <>
        <p>
          ‚ö†Ô∏èKh√°ch h√†ng c√≥ m·ªôt kho·∫£n thanh to√°n v·ªõi t·ªïng s·ªë ti·ªÅn{" "}
          <b>{formattedAmount}</b>, h·∫°n ch√≥t thanh to√°n v√†o ng√†y{" "}
          <b>{message?.dueDate}</b>. Vui l√≤ng ki·ªÉm tra chi ti·∫øt v√† th·ª±c hi·ªán
          thanh to√°n ƒë√∫ng h·∫°n.
        </p>
        <Link
          to={`/dashboard/payment-contracts?openViewDetail=true&id=${message?.paymentId}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Payment_Notification_Success: (
      <>
        <p>
          ‚úÖ Kh√°ch h√†ng ƒë√£ thanh to√°n th√†nh c√¥ng v·ªõi t·ªïng s·ªë ti·ªÅn{" "}
          <b>{formattedAmount}</b>, v√†o ng√†y <b>{message?.paymentDate}</b>.
        </p>
        <Link
          to={`/dashboard/payment-contracts?openViewDetail=true&id=${message?.paymentId}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Electricity_Usage_Verification: (
      <>
        <p>
          <b>X√°c nh·∫≠n ch·ªâ s·ªë ƒëi·ªán:</b> Kh√°ch h√†ng vui l√≤ng ki·ªÉm tra ƒë·ªìng h·ªì s·ªë{" "}
          <b>{message?.meter?.serialNumber}</b>, ch·ªâ s·ªë ƒë√£ ƒë∆∞·ª£c ghi v√†o ng√†y{" "}
          <b>{message?.readingDate}</b>.
        </p>
        <p>
          üîπ S·ªë ƒë·∫ßu k·ª≥: <b>{message?.startReading}</b> <br /> üîπ S·ªë cu·ªëi k·ª≥:{" "}
          <b>{message?.endReading}</b> <br /> üîπ L∆∞·ª£ng ƒëi·ªán ti√™u th·ª• th√°ng n√†y:{" "}
          <b>{message?.usageAmountCurrentMonth}</b> kWh
        </p>
        <Link
          to={`/dashboard/electricity-usages?openViewDetail=true&id=${message?.electricityId}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Electricity_Usage_Customer:
      message?.status === "NO" ? (
        <>
          <p>
            ‚ö° <b>L∆∞u √Ω:</b> Kh√°ch h√†ng kh√¥ng ch·∫•p nh·∫≠n s·ªë ƒëi·ªán ƒë√£ ghi. Vui l√≤ng
            ki·ªÉm tra l·∫°i v√† li√™n h·ªá ƒë·ªÉ x√°c nh·∫≠n.
          </p>
          <Link
            to={`/dashboard/electricity-usages?openViewDetail=true&id=${message?.id}`}
            onClick={() => setOpenNotification(false)}
          >
            Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
          </Link>
        </>
      ) : (
        <>
          <p>
            ‚úÖ <b>X√°c nh·∫≠n:</b> Kh√°ch h√†ng ƒë√£ ƒë·ªìng √Ω v·ªõi s·ªë ƒëi·ªán ƒë√£ ghi. Vui
            l√≤ng ti·∫øn h√†nh t·∫°o h√≥a ƒë∆°n thanh to√°n.
          </p>
          <Link
            to={`/dashboard/electricity-usages?openViewDetail=true&id=${message?.id}`}
            onClick={() => setOpenNotification(false)}
          >
            Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
          </Link>
        </>
      ),
    Birthday_Notification: (
      <>
        <p>
          üéÇ Ng√†y <b>{message?.birthday}</b> l√† sinh nh·∫≠t c·ªßa kh√°ch h√†ng{" "}
          <b>{message?.directorName}</b>, gi√°m ƒë·ªëc c√¥ng ty{" "}
          <b>{message?.companyName}</b>. H√£y g·ª≠i l·ªùi ch√∫c m·ª´ng ƒë·∫øn h·ªç!
        </p>
        <Link
          to={`/dashboard/customer-contracts?openViewDetail=true&id=${message?.id}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Repair_Request_Notification: (
      <>
        <p>
          B·∫°n c√≥ m·ªôt y√™u c·∫ßu s·ª≠a ch·ªØa v√†o ng√†y{" "}
          <b>{new Date(message?.requestDate).toLocaleDateString("vi-VN")}</b>.
          Vui l√≤ng ki·ªÉm tra th√¥ng tin v√† ƒëi·ªÅu nh√¢n vi√™n k·ªπ thu·∫≠t ƒëi ki·ªÉm tra
          hi·ªán tr·∫°ng.
        </p>
        <Link
          to={`/dashboard/repair-requests?openViewDetail=true&id=${message?.requestID}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Repair_Request_Notification_Technician: (
      <>
        <p>
          B·∫°n c√≥ m·ªôt nhi·ªám v·ª• s·ª≠a ch·ªØa v√†o ng√†y{" "}
          <b>{new Date(message?.requestDate).toLocaleDateString("vi-VN")}</b>.
          Nhi·ªám v·ª• ƒë∆∞·ª£c ƒëi·ªÅu ƒë·ªông t·ª´ c·∫•p tr√™n, vui l√≤ng nhanh ch√≥ng ki·ªÉm tra v√†
          ph·∫£n h·ªìi.
        </p>
        <Link
          to={`/dashboard/repair-requests?openViewDetail=true&id=${message?.requestID}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Maintenance_Task_Notification: (
      <>
        <p>
          B·∫°n c√≥ nhi·ªám v·ª• b·∫£o tr√¨ v√†o ng√†y{" "}
          <b>{new Date(message?.notifications).toLocaleDateString("vi-VN")}</b>
        </p>
        <Link
          to={`/dashboard/notifications?openViewDetail=true&id=${message?.id}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Repair_Request_Notification_Customer: (
      <>
        <p>
          Y√™u c·∫ßu s·ª≠a ch·ªØa ƒë√£ ƒë∆∞·ª£c k·ªπ thu·∫≠t vi√™n{" "}
          <b>{message?.technician?.name}</b>{" "}
          {message?.status === "SUCCESS" ? (
            <>
              x·ª≠ l√Ω v√† ho√†n th√†nh <b>th√†nh c√¥ng</b>.
            </>
          ) : (
            <>
              x·ª≠ l√Ω nh∆∞ng <b>kh√¥ng th·ªÉ ho√†n th√†nh</b> do c√≥ s·ª± c·ªë ph√°t sinh.
            </>
          )}{" "}
          Qu√Ω kh√°ch vui l√≤ng ki·ªÉm tra th√¥ng tin chi ti·∫øt v√† li√™n h·ªá v·ªõi ch√∫ng
          t√¥i n·∫øu c·∫ßn th√™m h·ªó tr·ª£.
        </p>

        <Link
          to={`/dashboard/repair-requests?openViewDetail=true&id=${message?.requestID}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Repair_Request_Notification_Complete: (
      <>
        <p>
          Y√™u c·∫ßu s·ª≠a ch·ªØa ƒë∆∞·ª£c ph√¢n b·ªï nhi·ªám v·ª• cho k·ªπ thu·∫≠t vi√™n{" "}
          <b>{message?.technician?.name}</b>{" "}
          {message?.status === "SUCCESS" ? (
            <>
              x·ª≠ l√Ω v√† ho√†n th√†nh <b>th√†nh c√¥ng</b>.
            </>
          ) : (
            <>
              x·ª≠ l√Ω nh∆∞ng <b>kh√¥ng th·ªÉ ho√†n th√†nh</b> do c√≥ s·ª± c·ªë ph√°t sinh.
            </>
          )}{" "}
        </p>
        <Link
          to={`/dashboard/repair-requests?openViewDetail=true&id=${message?.requestID}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Work_Register_Notification_Customer: (
      <>
        <p>
          ƒêƒÉng k√Ω thi c√¥ng c·ªßa qu√Ω kh√°ch v√†o ng√†y{" "}
          <b>
            {new Date(message?.registrationDate).toLocaleDateString("vi-VN")}
          </b>{" "}
          ƒë√£{" "}
          <b>
            {message?.status === "APPROVED"
              ? "ƒë∆∞·ª£c ch·∫•p nh·∫≠n"
              : message?.status === "REJECTED"
              ? "b·ªã t·ª´ ch·ªëi"
              : "ho√†n th√†nh"}
          </b>
          . Vui l√≤ng ki·ªÉm tra th√¥ng tin chi ti·∫øt v√† li√™n h·ªá v·ªõi ch√∫ng t√¥i n·∫øu
          c·∫ßn th√™m h·ªó tr·ª£.
        </p>

        <Link
          to={`/dashboard/work-registrations?openViewDetail=true&id=${message?.registrationID}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Work_Registration_Notification: (
      <>
        <p>
          B·∫°n c√≥ y√™u c·∫ßu ƒëƒÉng k√Ω thi c√¥ng c·ªßa c√¥ng ty{" "}
          <b>{message?.account?.customer?.companyName}</b> v√†o ng√†y{" "}
          <b>
            {new Date(message?.registrationDate).toLocaleDateString("vi-VN")}
          </b>
          . Vui l√≤ng ki·ªÉm tra v√† ph·∫£n h·ªìi l·∫°i kh√°ch h√†ng.
        </p>

        <Link
          to={`/dashboard/work-registrations?openViewDetail=true&id=${message?.registrationID}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Due_Payment_Notification: (
      <>
        <p>
          Kho·∫£n thanh to√°n ƒë·∫øn h·∫°n, th·ªùi h·∫°n cu·ªëi l√† ng√†y{" "}
          <b>{new Date(message?.dueDate).toLocaleDateString("vi-VN")}</b>
        </p>

        <Link
          to={`/dashboard/payment-contracts?openViewDetail=true&paymentId=${message?.paymentId}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Exp_Payment_Notification: (
      <>
        <p>
          Kho·∫£n thanh to√°n ƒë√£ h·∫øt h·∫°n
          <b>{new Date(message?.dueDate).toLocaleDateString("vi-VN")}</b>
        </p>

        <Link
          to={`/dashboard/payment-contracts?openViewDetail=true&paymentId=${message?.paymentId}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Due_Contract_Notification: (
      <>
        <p>
          H·ª£p ƒë·ªìng c·ªßa kh√°ch h√†ng c√¥ng ty{" "}
          <b>{message?.customer?.companyName}</b> c√≤n 30 ng√†y n·ªØa l√† h·∫øt h·∫°n.
          Vui l√≤ng li√™n h·ªá kh√°ch h√†ng ƒë·ªÉ gia h·∫°n h·ª£p ƒë·ªìng. N·∫øu kh√°ch h√†ng kh√¥ng
          mu·ªën gia h·∫°n, vui l√≤ng h∆∞·ªõng d·∫´n c√°c th·ªß t·ª•c thanh l√Ω h·ª£p ƒë·ªìng.
        </p>
        <Link
          to={`/dashboard/customer-contracts?openViewDetail=true&id=${message?.id}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Repair_Proposal_Notification: (
      <>
        <p>
          B·ªô ph·∫≠n K·ªπ thu·∫≠t ƒë√£ ho√†n th√†nh ƒë√°nh gi√° r·ªßi ro v√† ƒë·ªÅ xu·∫•t ph∆∞∆°ng √°n
          b·∫£o tr√¨ v√†o ng√†y <b>{message?.requestDate}</b>.
        </p>
        <Link
          to={`/dashboard/quotations-repair-proposals?openViewDetail=true&id=${message?.id}`}
          onClick={() => setOpenNotification(false)}
        >
          Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
        </Link>
      </>
    ),
    Contract_Customer_Confirmation:
      message?.contract?.leaseStatus === "Rejected" ? (
        <>
          <p>
            Kh√°ch h√†ng t·ª´ <b>{message?.contract?.customer?.companyName}</b> v·ª´a
            ph·∫£n h·ªìi <b>t·ª´ ch·ªëi</b> h·ª£p ƒë·ªìng v√¨ ph√°t hi·ªán sai s√≥t d·ªØ li·ªáu.
          </p>
          <b>Nh·ªØng sai s√≥t ƒë∆∞·ª£c h·ªç n√™u ra bao g·ªìm:</b>
          <div>
            {message?.comment?.split("\n").map((x, index) => (
              <p key={index}>{x}</p>
            ))}
          </div>
          <Link
            to={`/dashboard/customer-contracts?openViewDetail=true&id=${message?.contract?.id}`}
            onClick={() => setOpenNotification(false)}
          >
            Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
          </Link>
        </>
      ) : (
        <>
          <p>
            Kh√°ch h√†ng t·ª´ <b>{message?.contract?.customer?.companyName}</b> v·ª´a
            ph·∫£n h·ªìi <b>ch·∫•p nh·∫≠n</b> h·ª£p ƒë·ªìng. Vui l√≤ng ki·ªÉm tra.
          </p>
          <b>Kh√°ch h√†ng c√≥ ghi ch√∫ th√™m r·∫±ng:</b>
          <div>
            {message?.comment?.split("\n").map((x, index) => (
              <p key={index}>{x}</p>
            ))}
          </div>
          <Link
            to={`/dashboard/customer-contracts?openViewDetail=true&id=${message?.contract?.id}`}
            onClick={() => setOpenNotification(false)}
          >
            Ki·ªÉm tra th√¥ng tin chi ti·∫øt trong h·ªá th·ªëng.
          </Link>
        </>
      ),
  };

  const content = (
    <div className="flex flex-col gap-2">
      {notificationTypes[notificationDetails?.recipient?.type] || (
        <p>Kh√¥ng c√≥ th√¥ng b√°o ph√π h·ª£p.</p>
      )}
    </div>
  );

  return (
    <Modal
      title="üì¢ Th√¥ng b√°o"
      open={openNotification}
      onCancel={() => setOpenNotification(false)}
      footer={null}
    >
      {content}
    </Modal>
  );
};

export default ModalNotification;
